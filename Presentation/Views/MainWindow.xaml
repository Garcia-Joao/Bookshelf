<Window x:Class="Bookshelf.Presentation.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Bookshelf.Presentation.Views"
        xmlns:vm="clr-namespace:Bookshelf.Presentation.ViewModels"
        xmlns:components="clr-namespace:Bookshelf.Presentation.Components"
        xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
        mc:Ignorable="d"
        ResizeMode="NoResize"
        WindowStyle="SingleBorderWindow"
        Title="Bookshelf" Height="600" Width="1020">


    <Window.Resources>
        <Style x:Key="MenuButton" TargetType="Button">
            <Setter Property="Foreground" Value="{DynamicResource PrimaryButtonBrush}"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Width" Value="140"/>
            <Setter Property="Height" Value="45"/>
        </Style>

        <Style x:Key="FirstMenuButton" BasedOn="{StaticResource MenuButton}" TargetType="Button">
            <Setter Property="Content" Value="{Binding FirstMenuText}"/>
            <Setter Property="telerik:CornerRadiusHelper.ClipRadius" Value="14,14,0,0"/>
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
        </Style>

        <Style x:Key="SecondMenuButton" BasedOn="{StaticResource MenuButton}" TargetType="Button">
            <Setter Property="Content" Value="{Binding SecondMenuText}"/>
            <Setter Property="telerik:CornerRadiusHelper.ClipRadius" Value="0,0,14,14"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>


        <DataTemplate DataType="{x:Type vm:BooksViewModel}">
            <local:BooksView/>
        </DataTemplate>
        
        <DataTemplate DataType="{x:Type vm:AuthorsViewModel}">
            <local:AuthorsView/>
        </DataTemplate>

        <DataTemplate DataType="{x:Type vm:GenresViewModel}">
            <local:GenresView/>
        </DataTemplate>

        <DataTemplate DataType="{x:Type vm:BookOverlayViewModel}">
            <components:OverlayBookCard/>
        </DataTemplate>

        <DataTemplate DataType="{x:Type vm:BasicCardViewModel}">
            <components:BasicCard/>
        </DataTemplate>

    </Window.Resources>
    
    <Grid>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height=".2*"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <Border BorderThickness="0,0,0,3"
                    Background="{DynamicResource HeaderBackgroundBrush}"
                    BorderBrush="{DynamicResource SplitterBrush}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width=".3*"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <Grid Grid.Column="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <!--Author Filter Component-->
                        <components:LabeledComboBox LabelText="Author"
                                                    Visibility="{Binding ComboBoxVisibility, UpdateSourceTrigger=PropertyChanged}"
                                                    ComboBoxItems="{Binding Authors}"
                                                    SelectedComboBoxItem="{Binding AuthorFilter, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                        <!--Genre Filter Component-->
                        <components:LabeledComboBox LabelText="Genre" 
                                                    Visibility="{Binding ComboBoxVisibility, UpdateSourceTrigger=PropertyChanged}"
                                                    ComboBoxItems="{Binding Genres}"
                                                    SelectedComboBoxItem="{Binding GenreFilter, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                                    Grid.Column="1"/>

                        <!--Book Search Component-->

                        <TextBlock Text="Search" Grid.Column="2"
                                   Foreground="{DynamicResource FontBrush}"
                                   FontWeight="SemiBold"
                                   Margin="23,20,100,55"/>

                        <Border CornerRadius="10"
                                BorderThickness="1"
                                Grid.Column="2"
                                Background="{DynamicResource ViewBackgroundBrush}"
                                BorderBrush="{DynamicResource SplitterBrush}"
                                Margin="15, 40, 15, 20">
                            <StackPanel Orientation="Horizontal">
                                <telerik:RadWatermarkTextBox BorderThickness="0"
                                                             Background="Transparent"
                                                             WatermarkBehavior="HideOnTextEntered"
                                                             WatermarkContent="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}"
                                                             FocusVisualStyle="{x:Null}"
                                                             Text="{Binding NameFilter, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                                             Width="142"
                                                             VerticalAlignment="Center"
                                                             telerik:CornerRadiusHelper.ClipRadius="10"
                                                             />
                                <Image Source="{DynamicResource SearchIcon}"
                                       HorizontalAlignment="Left"
                                       Margin="2,10,10,10"/>


                            </StackPanel>
                        </Border>

                        <Border Background="{DynamicResource PrimaryButtonBrush}"
                                CornerRadius="15"
                                Margin="30,35,30,15"
                                Grid.Column="3">
                            <Button telerik:CornerRadiusHelper.ClipRadius="15"
                                    FocusVisualStyle="{x:Null}"
                                    Command="{Binding AddCommand}">
                                <StackPanel Orientation="Horizontal"
                                            VerticalAlignment="Center">
                                    <TextBlock Text="ADD"
                                               Foreground="{DynamicResource FontOnPrimaryBrush}"
                                               FontWeight="Bold"
                                               Margin="0,0,5,0"
                                               FontSize="16">
                                    </TextBlock>
                                    <Image Source="{DynamicResource AddIcon}"
                                           Margin="1"
                                           Width="23">

                                    </Image>
                                </StackPanel>
                            </Button>

                            <Border.Effect>
                                <DropShadowEffect BlurRadius="5"
                                                  Opacity=".3"
                                                  >

                                </DropShadowEffect>
                            </Border.Effect>
                        </Border>
                    </Grid>
                </Grid>
            </Border>

            <Grid Grid.Row="1"
                  Background="{DynamicResource WindowBackgroundBrush}">
                <Border Background="{DynamicResource ViewBackgroundBrush}"
                        Margin="15"
                        CornerRadius="10">
                    <Border.Effect>
                        <DropShadowEffect BlurRadius="10"
                                          Opacity=".5">

                        </DropShadowEffect>
                    </Border.Effect>

                    <ContentControl Margin="4" Content="{Binding CurrentViewModel}"
                                    Width="auto"
                                    Height="445">

                    </ContentControl>
                </Border>
            </Grid>
        </Grid>

        <Border VerticalAlignment="Top"
                HorizontalAlignment="Left"
                CornerRadius="15"
                Margin="60, 30"
                Width="150"
                Height="45">
            <Border.Style>
                <Style TargetType="Border">
                    <Setter Property="Background" Value="{DynamicResource PrimaryButtonBrush}"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsMenuOpen}" Value="Visible">
                            <Setter Property="Background" Value="{DynamicResource PrimaryButtonSelectedBrush}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsMenuOpen}" Value="Collapsed">
                            <Setter Property="Background" Value="{DynamicResource PrimaryButtonBrush}"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <Button Command="{Binding OpenMenuCommand}"
                    telerik:CornerRadiusHelper.ClipRadius="15">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding CurrentViewName}"
                               FontSize="25"
                               Foreground="{DynamicResource FontOnPrimaryBrush}"/>
                    <Image Source="{DynamicResource MenuIcon}" Margin="20, 5, 0, 0" Width="20"/>
                </StackPanel>
            </Button>
        </Border>


        <Border VerticalAlignment="Top"
                HorizontalAlignment="Left"
                Background="{DynamicResource ViewBackgroundBrush}"
                BorderThickness="1"
                BorderBrush="{DynamicResource BorderBrush}"
                CornerRadius="15"
                Margin="60,80,0,0"
                Visibility="{Binding IsMenuOpen}"
                >

            <Border.Effect>
                <DropShadowEffect BlurRadius="6"
                                  Opacity=".4"/>
            </Border.Effect>
            <StackPanel>
                <Button Style="{StaticResource FirstMenuButton}"
                        Command="{Binding FirstMenuCommand, UpdateSourceTrigger=PropertyChanged}"/>

                <Button Style="{StaticResource SecondMenuButton}"
                        Command="{Binding SecondMenuCommand, UpdateSourceTrigger=PropertyChanged}"/>

            </StackPanel>
        </Border>

        <!--Overlay content-->
        <Grid Visibility="{Binding OverlayVisibility, UpdateSourceTrigger=PropertyChanged}"
              d:Visibility="Collapsed">
            <Rectangle>
                <Rectangle.Fill>
                    <VisualBrush Visual="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                </Rectangle.Fill>
                <Rectangle.Effect>
                    <BlurEffect Radius="10"/>
                </Rectangle.Effect>
            </Rectangle>
            <Rectangle Fill="#80000000"/>

            <Grid>
                <!-- This content will be on top of the blurred background -->
                <ContentControl Margin="200, 100"
                                Content="{Binding CurrentOverlay, UpdateSourceTrigger=PropertyChanged}"
                                HorizontalContentAlignment="Center"
                                VerticalContentAlignment="Center">
                    
                </ContentControl>
            </Grid>
        </Grid>

    </Grid>
</Window>
